name: CI - Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

permissions:
  contents: read
  actions: read
  checks: write
  pull-requests: write
  statuses: write

jobs:
  test:
    name: Test on JDK ${{ matrix.java-version }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        java-version: [25]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'corretto'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Validate Maven POM
      run: mvn validate
      
    - name: Compile project
      run: mvn compile
      
    - name: Run tests
      run: mvn test
      
    - name: Generate test reports
      run: mvn jacoco:report
      if: success() || failure()
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: success() || failure()
      with:
        name: test-results-${{ matrix.os }}-jdk${{ matrix.java-version }}
        path: |
          target/surefire-reports/
          target/site/jacoco/
          
    - name: Comment PR with test results
      uses: dorny/test-reporter@v1
      if: github.event_name == 'pull_request' && (success() || failure())
      with:
        name: Maven Tests - ${{ matrix.os }} JDK${{ matrix.java-version }}
        path: target/surefire-reports/*.xml
        reporter: java-junit
        fail-on-error: false
        token: ${{ secrets.GITHUB_TOKEN }}

  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Shallow clones should be disabled for better analysis
        
    - name: Set up JDK 25
      uses: actions/setup-java@v4
      with:
        java-version: 25
        distribution: 'corretto'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Run tests with coverage
      run: mvn clean test jacoco:report
      
    - name: Generate coverage report
      run: mvn jacoco:report
      
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./target/site/jacoco/jacoco.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      continue-on-error: true

  security-scan:
    name: Security Vulnerability Scan
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 25
      uses: actions/setup-java@v4
      with:
        java-version: 25
        distribution: 'corretto'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Run OWASP Dependency Check
      run: |
        mvn org.owasp:dependency-check-maven:check
      continue-on-error: true
      
    - name: Upload security scan results
      uses: actions/upload-artifact@v4
      if: success() || failure()
      with:
        name: security-scan-results
        path: target/dependency-check-report.html

  build-artifacts:
    name: Build Application Artifacts
    runs-on: ${{ matrix.os }}
    needs: test
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 25
      uses: actions/setup-java@v4
      with:
        java-version: 25
        distribution: 'corretto'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Build application
      run: mvn clean compile package
      
    - name: Create platform-specific executable (Linux/Mac)
      if: runner.os != 'Windows'
      run: |
        mkdir -p build/
        echo '#!/bin/bash' > build/study-library.sh
        echo 'java --enable-preview -cp "target/study-library-1.0.0.jar:target/lib/*" com.studylibrary.Launcher' >> build/study-library.sh
        chmod +x build/study-library.sh
        
    - name: Create platform-specific executable (Windows)
      if: runner.os == 'Windows'
      run: |
        mkdir build
        echo 'java --enable-preview -cp "target/study-library-1.0.0.jar;target/lib/*" com.studylibrary.Launcher' > build/study-library.bat
        
    - name: Package application with dependencies
      run: mvn dependency:copy-dependencies -DoutputDirectory=target/lib
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: study-library-${{ runner.os }}
        path: |
          target/study-library-*.jar
          target/lib/
          build/
        retention-days: 30

  performance-test:
    name: Performance Testing
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 25
      uses: actions/setup-java@v4
      with:
        java-version: 25
        distribution: 'corretto'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Run performance benchmarks
      run: |
        mvn compile exec:java -Dexec.mainClass="com.studylibrary.benchmark.Java25ShowcaseApp"
        
    - name: Generate performance report
      run: |
        echo "Performance benchmark completed. Check job logs for detailed results."